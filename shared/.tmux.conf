# Launch command
# Attach while detaching all other terminals
# Required as other terminals that are smaller will bind to smallest.
# Even more useful with mosh
#      tmux attach -d

# ============================================================================
# Custom Commands (via py/tmux_helper.py)
# ============================================================================
# Keybindings:
#   C-a t                - Update window title based on running process
#   C-a Shift+Space      - Rotate layout (toggle even-horizontal/even-vertical)
#   C-a /                - Toggle 1/3-2/3 layout (works with 2 panes)
#   C-a {                - Swap current pane with previous pane
#   C-a }                - Swap current pane with next pane
#
# Command Aliases (use via C-a : then type command):
#   :info                - Update window title based on running process
#   :rename-all          - Rename all tmux panes based on their current state
#   :rotate              - Rotate layout (toggle even-horizontal/even-vertical)
#   :third               - Toggle 1/3-2/3 layout (works with 2 panes)
# ============================================================================

# cheat sheet:
# https://sanctum.geek.nz/arabesque/vi-mode-in-tmux/
# https://gist.github.com/andreyvit/2921703
# Help
# C-a n - next
# C-a p - prev
# C-a c - create
# #-a w  - list
# list-keys -T copy-mode-vi

# C-A v - copy mode.
#    -> v begin selection
#    -> y yank selection
# C-A ] paste

# C-A arrow keys - switch panes
# C-A % - Split horizontal (make sidebar)
# C-A " - Split vertical
# C-A r - Source tmux config

# Run it via the mouse.
# set-option -g mouse on


# wsl doesn't honor chsh (??)
# Force it from my rc file
# Check for zsh in order: linuxbrew first, then /bin/zsh, else do nothing
if-shell "test -f /home/linuxbrew/.linuxbrew/bin/zsh" \
    'set -g default-shell /home/linuxbrew/.linuxbrew/bin/zsh; set -g default-command /home/linuxbrew/.linuxbrew/bin/zsh' \
    'if-shell "test -f /bin/zsh" \
        "set -g default-shell /bin/zsh; set -g default-command /bin/zsh" \
        ""'


# Start windows and panes at 1, not 0
# This makes life easier when touch typing
set -g base-index 1
setw -g pane-base-index 1


# when in copy mode move ala vi.
# In iTerm - be sure to enable copy from app itself (Looks like that's what tmux is doing)
setw -g mode-keys vi

# C-B is the default prefix - but that's used via vi so use C-a instead.
unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix

# how about some nice vi like sane bindings

#enable true color
# Not quite sure what these lines do, but a close linkage is here;
# https://wiki.archlinux.org/index.php/tmux
#set-option -ga terminal-overrides ",xterm-256color:Tc,rxvt-unicode-256color:Tc"
# set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
# All terminals I use should now be true color (or close enough) -- previous lines I've used are above.
set -as terminal-overrides ',xterm*:Tc'


# Annoyingly need to update the plugin propetly
# git clone https://github.com/jimeh/tmux-themepack/issues
# git fetch origin pull/55/head:fix/duplication-on-reload
# git checkout duplicate-on-reload
# ~/.tmux/plugins/tpm/bin/update_plugins all

# use v to enter copy mode
bind v copy-mode
bind V copy-mode
bind 3  select-layout even-horizontal


# Once in copy mode, use v to select and y to yank
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'idvorkin/tmux-themepack' # replacing since reload doesn't work
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'Morantron/tmux-fingers'
# Cool idea, but doesn't work for me, I wonder if it's not compatible with power theme
set -g @tmux-nerd-font-window-name-shell-icon 'ÔÅî'
set -g @tmux-nerd-font-window-name-show-name false
# I have a hunch this is messing stuff up
# set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'

# C-A F (not the useful)
set -g @plugin 'sainnhe/tmux-fzf'

# Other examples:
# set -g @plugin 'github_username/plugin_nme'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Default red, then override by host.
set -g @themepack 'powerline/block/red'

if '[ `hostname -s` = IgorBasementHP ]' \
       'set -g @themepack "powerline/block/yellow"'

# lightsail - gr I think I need to escape the - GROAN frickin complex shells.
if 'test -f /home/ec2-user/.vimrc' \
       'set -g @themepack "powerline/block/magenta"'

# Woohoo, the test command works (god knows why). Only my mac has /Users/idvorkin
if 'test -f /Users/idvorkin/.tmux.conf' \
       'set -g @themepack "powerline/block/yellow"'

# Ms modifies OSC 52 clipboard handling to work with mosh, see
# https://gist.github.com/yudai/95b20e3da66df1b066531997f982b57b
# set -ag terminal-overrides "vte*:XT:Ms=\\E]52;c;%p2%s\\7,xterm*:XT:Ms=\\E]52;c;%p2%s\\7"

# enable OSC 52 clipboard
set -g set-clipboard on

unbind r
bind r source-file ~/.tmux.conf

# needed to get italics working in tmux
# https://github.com/tmux/tmux/wiki/FAQ#i-don't-see-italics-or-italics-and-reverse-are-the-wrong-way-round
# see - https://rsapkf.xyz/blog/enabling-italics-vim-tmux
# echo -e "\e[3m foo \e[23m"

set -g default-terminal "tmux"
# Sigh can't use screen because it doesn't support italics
# set -g default-terminal "screen-256color"
set-option -g allow-passthrough on



# Put status bar on top
# set-option -g status-position top
set-option -g status-position bottom

bind-key a run-shell 'open "/Applications/Alfred 5.app/"'
# bind-key a command-prompt "run-shell 'open \"/Applications/Alfred 5.app/\"'"

# Re-install plugin's w C-A I
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# $ git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm


# Clean up the theme pack - get rid of username:
set-option -g @themepack-status-left-area-middle-format '#(test "$(uname)" = "Darwin" && y flow-info --oneline || echo "")'

# Remove year from date
set-option -g @themepack-status-right-area-middle-format "%d-%b"

# Remove secoonds from time
set-option -g @themepack-status-right-area-left-format "%H:%M"

# Remove machine name
set-option -g @themepack-status-right-area-right-format  "#(hostname -s)"

run '~/.tmux/plugins/tpm/tpm'

# remove the left hand part of the status bar
# set -g status-left-length 1

# See status options via
# tmux show-options -g | grep themepack





# Move windows around
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

bind-key t run-shell "tmux_helper info"

# ============================================================================
# Custom Layout Rotation
# ============================================================================
# Toggles between even-horizontal and even-vertical layouts using tmux_helper
# Prefix + Shift+Space: Toggle layout between even-horizontal/even-vertical
# ============================================================================
bind-key S-Space run-shell "tmux_helper rotate"

# ============================================================================
# Custom Layout: 1/3 - 2/3 Split
# ============================================================================
# Toggles between even layout and 1/3-2/3 layout (works with 2 panes)
# Prefix + /: Toggle between even and 1/3-2/3 layout
# Prefix + : then type 'third': Run via command prompt
# ============================================================================
bind-key / run-shell "tmux_helper third"

# ============================================================================
# tmux_helper Command Aliases
# ============================================================================
# Use these commands via Prefix + : then type the command name
# ============================================================================
set -s command-alias[100] info='run-shell "tmux_helper info"'
set -s command-alias[101] rename-all='run-shell "tmux_helper rename-all"'
set -s command-alias[102] rotate='run-shell "tmux_helper rotate"'
set -s command-alias[103] third='run-shell "tmux_helper third"'

