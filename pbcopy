#! /usr/bin/env python3
# From: https://github.com/skaji/remote-pbcopy-iterm2/blob/master/README.md

import base64
import os
import subprocess
import sys
from typing import Callable
from icecream import ic


def normal_to_clipboard(b64: str) -> str:
    return "\x1B]52;c;" + b64 + "\a"


# Seems like on mosh atleast, normal escape sequence just works ...
def tmux_to_clipboard(b64: str) -> str:
    # return "\ePtmux;\e\e]52;c;" . b64 . "\x07\e\\"
    return ""


def screen_to_clipboard(b64: str) -> str:
    out = []
    for i in range(sys.maxsize):
        begin, end = i * 76, min((i + 1) * 76, len(b64))
        out.append(
            ("\x1BP\x1B]52;;" if begin == 0 else "\x1B\x5C\x1BP") + b64[begin:end]
        )
        if end == len(b64):
            break
    out.append("\x07\x1B\x5C")

    return "".join(out)


def is_tmux_cc(pid: str) -> bool:
    try:
        out = subprocess.check_output(["ps", "-p", pid, "-o", "command="])
        out = out.rstrip(b"\n\r")
        for arg in out.split(b" "):
            if arg == b"-CC":
                return True
        return False
    except subprocess.CalledProcessError:
        return False


def run():
    if len(sys.argv) == 1:
        b = sys.stdin.buffer.read()
    else:
        if sys.argv[1] == "-h" or sys.argv[1] == "--help":
            print("Usage:\n  pbcopy FILE\n  some-command | pbcopy\n", end="")
            sys.exit(1)
        b = open(sys.argv[1], "rb").read()

    new_clipboard_content = b.rstrip(b"\n\r")
    if not new_clipboard_content:
        print("Nothing to copy, clearing clipboard, is that what you meant?")

    ic(new_clipboard_content)
    b64_clipboard_content = base64.b64encode(new_clipboard_content).decode(
        encoding="UTF-8"
    )
    ic(b64_clipboard_content)
    for to_clipboard in [tmux_to_clipboard, screen_to_clipboard, normal_to_clipboard]:
        to_clipboard_string = to_clipboard(b64_clipboard_content)
        ic(to_clipboard_string)
        print(to_clipboard_string, end="")


if __name__ == "__main__":
    run()
